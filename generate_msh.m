function  generate_msh(x_y_dim, ... 
                       z_dim, ...
                       num_layers, ...
                       d_value, ...
                       dz_value, ...
                       tsv_option, ...
                       tsv_file, ...
                       tsv_r, ...
                       tsv_t, ...
                       tsv_pad_t, ...
                       micro_bump_r, ...
                       filename, ...
                       lc, ...
                       heat_map, ...
                       min_temp, ...
                       max_temp)
                   
    %UNTITLED Summary of this function goes here
    fp = fopen(filename, 'w');
    fprintf(fp, 'lc = %.2f;\n', lc);
    scale     = 25;
    % x_start, y_start is the origin
    x_start   = 0; %-0.25 * x_y_dim;
    y_start   = 0; %-0.25 * x_y_dim;
    % x_min and y_min reflect the minimum coordinates of heat sink +
    % layers. Heat sink will either be at same coordinates as layers or
    % will be larger. 
    x_min     = 0;
    y_min     = 0;
    
    x_start   = x_start / scale;
    y_start   = y_start / scale;

    x_dim     = x_y_dim / scale;
    y_dim     = x_y_dim / scale;
    z_dim     = z_dim / scale;
    tsv_r     = tsv_r / scale;
    tsv_t     = tsv_t / scale;
    tsv_pad_t = tsv_pad_t / scale;
    micro_bump_r = micro_bump_r / scale;
    
    d_value   = d_value / scale;
    dz_value  = dz_value / scale;
    num_cells = x_dim / d_value;
    
    % Main sufrace
    point_index   = 0;
    line_index    = 0;
    surface_index = 0;
    volume_index  = 0;
    
    point_str   = [];
    line_str    = [];
    surface_str = [];
    volume_str  = [];
    
    color = [];
    colormap = jet(256);
    % Generate circuit board layer
    % FR4 layer is assumed to be from the x_start, y_start and is 1.5 times
    % the dimensions of the layers
    fr4_thickness = 2 * dz_value;
    [point_index, ...
     line_index, ...
     surface_index, ...
     volume_index, ...
     point_str, ...
     line_str, ...
     surface_str, ...
     volume_str] = generate_layer(x_start, y_start, 0, ...
                                  1.5 * x_dim, ...
                                  1.5 * y_dim, ...
                                  fr4_thickness, ...
                                  point_index, ...
                                  line_index, ...
                                  surface_index, ...
                                  volume_index, ...
                                  point_str, ...
                                  line_str, ...
                                  surface_str, ...
                                  volume_str, ...
                                  0, ...
                                  color);
    
    z_end = fr4_thickness;
    
    pad_x_dim = d_value / 2;
    pad_y_dim = d_value / 2;
    pad_z_dim = tsv_pad_t;

    % Since fr4 is 1.5 times the dimensions (symmetric), it implies that
    % the layers should start at 0.25 * dimension
    x_start = x_start + 0.25 * x_dim;
    y_start = y_start + 0.25 * y_dim;
    for idx=1:num_layers
        z_start = z_end + micro_bump_r * 2 + pad_z_dim;
        z_end   = z_start + z_dim;
        %z_end   = z_start + z_dim + pad_z_dim;
        
        num_blks_x = x_dim / d_value;
        num_blks_y = y_dim / d_value;
        num_blks_z = (z_dim) / dz_value;
        for i = 1:num_blks_x
            for j = 1:num_blks_y
                for k = 1:num_blks_z
                    x_s = x_start + (i - 1) * d_value;
                    y_s = y_start + (j - 1) * d_value;
                    z_s = z_start + (k - 1) * dz_value;
                    x_d = d_value;
                    y_d = d_value;
                    z_d = dz_value;
                    % The struct_fdd code creates 'fds' corrsponding to max
                    % dimensions. Therefore, get the index taking x_min as
                    % the reference. If heat sink is larger than the
                    % layers, then fd should start from origin of heat sink
                    % not the layers
                    heat_map_idx_x = (x_s + x_d - x_min) / d_value;
                    heat_map_idx_y = (y_s + y_d - y_min) / d_value;
                    heat_map_idx_z = (z_s + z_d - fr4_thickness - micro_bump_r * 2 - pad_z_dim)/dz_value;
                    temp = 1 + round(heat_map(round(heat_map_idx_x), round(heat_map_idx_y), round(heat_map_idx_z)));
                    color = floor(255 * colormap(temp,:));

                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_layer(x_s, y_s, z_s, ...
                                                  x_d, y_d, z_d, ...
                                                  point_index, ...
                                                  line_index, ...
                                                  surface_index, ...
                                                  volume_index, ...
                                                  point_str, ...
                                                  line_str, ...
                                                  surface_str, ...
                                                  volume_str, ...
                                                  1, ...
                                                  color);
                end
            end
        end
        
        if (0 == 1)    
            % commented out for now
            [point_index, ...
             line_index, ...
             surface_index, ...
             volume_index, ...
             point_str, ...
             line_str, ...
             surface_str, ...
             volume_str] = generate_layer(0, 0, z_start + z_dim/2, ...
                                          x_dim, ...
                                          y_dim, ...
                                          z_dim/2, ...
                                          point_index, ...
                                          line_index, ...
                                          surface_index, ...
                                          volume_index, ...
                                          point_str, ...
                                          line_str, ...
                                          surface_str, ...
                                          volume_str);
        end
                                  
        % TSV's
        if tsv_option == 1 % automatic placement
            for i=1:num_cells
                for j=1:num_cells
                    x_pos = x_start + (i - 1/2) * d_value;
                    y_pos = y_start + (j - 1/2) * d_value;

                    % tsv
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_tsv(x_pos, ... 
                                                y_pos, ...
                                                tsv_r, ...
                                                z_start, ...
                                                z_dim, ...
                                                point_index, ...
                                                line_index, ...
                                                surface_index,...
                                                volume_index, ...
                                                point_str, ...
                                                line_str, ...
                                                surface_str, ...
                                                volume_str);

                    % insulation layer
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_tsv(x_pos, ... 
                                                y_pos, ...
                                                tsv_r + tsv_t, ...
                                                z_start, ...
                                                z_dim, ...
                                                point_index, ...
                                                line_index, ...
                                                surface_index,...
                                                volume_index, ...
                                                point_str, ...
                                                line_str, ...
                                                surface_str, ...
                                                volume_str);
                    % generate pad at bottom
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_layer(x_pos - pad_x_dim/2, ...
                                                  y_pos - pad_y_dim/2, ...
                                                  z_start - pad_z_dim, ...
                                                  pad_x_dim, ...
                                                  pad_y_dim, ...
                                                  pad_z_dim, ...
                                                  point_index, ...
                                                  line_index, ...
                                                  surface_index, ...
                                                  volume_index, ...
                                                  point_str, ...
                                                  line_str, ...
                                                  surface_str, ...
                                                  volume_str, 0, [0 0 0]);
                                              
                    % generate connector at bottom
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_connector(x_pos, ... 
                                                      y_pos, ...
                                                      z_start - pad_z_dim - micro_bump_r, ...                                        
                                                      micro_bump_r, ...
                                                      point_index, ...
                                                      line_index, ...
                                                      surface_index,...
                                                      volume_index, ...
                                                      point_str, ...
                                                      line_str, ...
                                                      surface_str, ...
                                                      volume_str);
                                                  
                    if (idx == num_layers)       
                        % generate pad at top
                        [point_index, ...
                         line_index, ...
                         surface_index, ...
                         volume_index, ...
                         point_str, ...
                         line_str, ...
                         surface_str, ...
                         volume_str] = generate_layer(x_pos - pad_x_dim/2, ...
                                                      y_pos - pad_y_dim/2, ...
                                                      z_start + z_dim, ...
                                                      pad_x_dim, ...
                                                      pad_y_dim, ...
                                                      pad_z_dim, ...
                                                      point_index, ...
                                                      line_index, ...
                                                      surface_index, ...
                                                      volume_index, ...
                                                      point_str, ...
                                                      line_str, ...
                                                      surface_str, ...
                                                      volume_str, 0, [0 0 0]);
                        % generate connector at top
                        [point_index, ...
                         line_index, ...
                         surface_index, ...
                         volume_index, ...
                         point_str, ...
                         line_str, ...
                         surface_str, ...
                         volume_str] = generate_connector(x_pos, ... 
                                                          y_pos, ...
                                                          z_start + z_dim + pad_z_dim + micro_bump_r, ...                                        
                                                          micro_bump_r, ...
                                                          point_index, ...
                                                          line_index, ...
                                                          surface_index,...
                                                          volume_index, ...
                                                          point_str, ...
                                                          line_str, ...
                                                          surface_str, ...
                                                          volume_str);
                    end
                end
            end
        else % manual placement
            tsv_fp = csvread(tsv_file);
            for i = 1:size(tsv_fp, 1)
                cell_x_id = tsv_fp(i,1);
                cell_y_id = tsv_fp(i,2);
                if (cell_x_id < 1 || cell_x_id > num_cells || ...
                    cell_y_id < 1 || cell_y_id > num_cells)
                    continue
                end
                x_pos = x_start + (cell_x_id - 1/2) * d_value;
                y_pos = y_start + (cell_y_id - 1/2) * d_value;
                layer = tsv_fp(i,3);

                if (layer == idx)
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_tsv(x_pos, ... 
                                                y_pos, ...
                                                tsv_r, ...
                                                z_start, ...
                                                z_dim, ...
                                                point_index, ...
                                                line_index, ...
                                                surface_index,...
                                                volume_index, ...
                                                point_str, ...
                                                line_str, ...
                                                surface_str, ...
                                                volume_str);

                    % insulation layer
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_tsv(x_pos, ... 
                                                y_pos, ...
                                                tsv_r + tsv_t, ...
                                                z_start, ...
                                                z_dim, ...
                                                point_index, ...
                                                line_index, ...
                                                surface_index,...
                                                volume_index, ...
                                                point_str, ...
                                                line_str, ...
                                                surface_str, ...
                                                volume_str);
                    % generate pad at bottom
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_layer(x_pos - pad_x_dim/2, ...
                                                  y_pos - pad_y_dim/2, ...
                                                  z_start - pad_z_dim, ...
                                                  pad_x_dim, ...
                                                  pad_y_dim, ...
                                                  pad_z_dim, ...
                                                  point_index, ...
                                                  line_index, ...
                                                  surface_index, ...
                                                  volume_index, ...
                                                  point_str, ...
                                                  line_str, ...
                                                  surface_str, ...
                                                  volume_str, 0, [0 0 0]);
                    [point_index, ...
                     line_index, ...
                     surface_index, ...
                     volume_index, ...
                     point_str, ...
                     line_str, ...
                     surface_str, ...
                     volume_str] = generate_connector(x_pos, ... 
                                                      y_pos, ...
                                                      z_start - pad_z_dim - micro_bump_r, ...                                        
                                                      micro_bump_r, ...
                                                      point_index, ...
                                                      line_index, ...
                                                      surface_index,...
                                                      volume_index, ...
                                                      point_str, ...
                                                      line_str, ...
                                                      surface_str, ...
                                                      volume_str);
                    if (idx == num_layers)       
                        % generate pad at top
                        [point_index, ...
                         line_index, ...
                         surface_index, ...
                         volume_index, ...
                         point_str, ...
                         line_str, ...
                         surface_str, ...
                         volume_str] = generate_layer(x_pos - pad_x_dim/2, ...
                                                      y_pos - pad_y_dim/2, ...
                                                      z_start + z_dim, ...
                                                      pad_x_dim, ...
                                                      pad_y_dim, ...
                                                      pad_z_dim, ...
                                                      point_index, ...
                                                      line_index, ...
                                                      surface_index, ...
                                                      volume_index, ...
                                                      point_str, ...
                                                      line_str, ...
                                                      surface_str, ...
                                                      volume_str, 0, [0 0 0]);
                        % generate connector at top
                        [point_index, ...
                         line_index, ...
                         surface_index, ...
                         volume_index, ...
                         point_str, ...
                         line_str, ...
                         surface_str, ...
                         volume_str] = generate_connector(x_pos, ... 
                                                          y_pos, ...
                                                          z_start + z_dim + pad_z_dim + micro_bump_r, ...                                        
                                                          micro_bump_r, ...
                                                          point_index, ...
                                                          line_index, ...
                                                          surface_index,...
                                                          volume_index, ...
                                                          point_str, ...
                                                          line_str, ...
                                                          surface_str, ...
                                                          volume_str);
                    end
                end
            end
        end
    end
    
    % Generate heat sink
    z_start = z_end + pad_z_dim + 2 * micro_bump_r;
    % heat sink thickness is assumed to be 4 times the z step in both this
    % file and generate_plot. This should be specified in tsv_simple and
    % passed in as argument.
    heat_sink_thickness = 4 * dz_value;
    % Heat sink and FR4 both start at origin and are 1.5 times the size of
    % the layer dimensions.
    x_start_hs = 0;
    y_start_hs = 0;
    x_dim_hs   = 1.5 * x_dim;
    y_dim_hs   = 1.5 * y_dim;
    num_blks_x = x_dim_hs / d_value;
    num_blks_y = y_dim_hs / d_value;
    num_blks_z = (heat_sink_thickness) / dz_value;

    for i = 1:num_blks_x
        for j = 1:num_blks_y
            for k = 1:num_blks_z
                x_s = x_start_hs + (i - 1) * d_value;
                y_s = y_start_hs + (j - 1) * d_value;
                z_s = z_start + (k - 1) * dz_value;
                x_d = d_value;
                y_d = d_value;
                z_d = dz_value;
                heat_map_idx_x = (x_s + x_d - x_start_hs) / d_value;
                heat_map_idx_y = (y_s + y_d - y_start_hs) / d_value;
                heat_map_idx_z = (z_s + z_d - fr4_thickness - micro_bump_r * 2 - pad_z_dim)/dz_value;
                temp = 1 + round(heat_map(round(heat_map_idx_x), round(heat_map_idx_y), round(heat_map_idx_z)));
                color = floor(255 * colormap(temp,:));

                [point_index, ...
                 line_index, ...
                 surface_index, ...
                 volume_index, ...
                 point_str, ...
                 line_str, ...
                 surface_str, ...
                 volume_str] = generate_layer(x_s, y_s, z_s, ...
                                              x_d, y_d, z_d, ...
                                              point_index, ...
                                              line_index, ...
                                              surface_index, ...
                                              volume_index, ...
                                              point_str, ...
                                              line_str, ...
                                              surface_str, ...
                                              volume_str, ...
                                              1, ...
                                              color);
            end
        end
    end
    
    fprintf(fp, point_str);
    fprintf(fp, line_str);
    fprintf(fp, surface_str);
    fprintf(fp, volume_str);
    % Generate colormap
    fprintf(fp, 'View \"Temperature Scale (C)\" {\n');
    fprintf(fp, 'T2(10, -10, 0){ \"Copyright (C) UCR MS-Lab\" };\n');
    fprintf(fp, 'T2(10, 15, 0){ StrCat(\"File created on \", Today) };\n');
    fprintf(fp, 'SL(300, -5, 0, 500, -5, 0){%.2f,%.2f};\n', min_temp, max_temp);
    fprintf(fp, '};\n');
    fprintf(fp, 'Show \"*\";\n');
    fclose(fp);
end

